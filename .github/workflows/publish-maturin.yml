name: Build and publish Python wheels with maturin

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        args: --release --features python --out dist --find-interpreter
        sccache: 'true'
        manylinux: auto

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist

  # Build source distribution on Linux only
  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build sdist
      uses: PyO3/maturin-action@v1
      with:
        command: sdist
        args: --out dist
    - name: Upload sdist as artifact
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist

  publish:
    needs: [build, sdist]
    runs-on: ubuntu-latest
    environment: pypi  # Use environment protection for PyPI token
    permissions:
      id-token: write  # For trusted publishing (optional)

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: List built artifacts
      run: ls -la dist/

    - name: Publish to PyPI
      uses: PyO3/maturin-action@v1
      with:
        command: upload
        args: --non-interactive --skip-existing -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} dist/*